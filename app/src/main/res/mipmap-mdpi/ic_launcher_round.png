package com.example.papilllon;

import android.app.Activity;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.drawable.BitmapDrawable;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

import com.google.firebase.storage.FirebaseStorage;
import com.google.firebase.storage.StorageReference;


import java.io.ByteArrayOutputStream;
import java.util.LinkedList;

public class MyCatalogAdapter extends RecyclerView.Adapter<MyCatalogAdapter.MyViewHolder> {

    private LinkedList<Product> myProducts;
    static Context context;


    // Provide a suitable constructor (depends on the kind of dataset)
    public MyCatalogAdapter(LinkedList<Product> myProducts, Context context) {
        this.myProducts = new LinkedList<Product>() ;
        this.myProducts.addAll(myProducts);
        this.context=context;
    }

    // Create new views (invoked by the layout manager)
    @Override
    public MyViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        // create a new view
        View itemLayoutView = LayoutInflater.from(parent.getContext()).inflate(R.layout.activity_catalogue, parent, false);
        MyViewHolder vh = new MyViewHolder(itemLayoutView);
        return vh;
    }

    // Replace the contents of a view (invoked by the layout manager)
    @Override
    public void onBindViewHolder(MyViewHolder holder, int position) {
        // - get element from your dataset at this position
        // - replace the contents of the view with that element
        holder.designation.setText(myProducts.get(position).getDesignation());
        holder.price.setText(String.valueOf(myProducts.get(position).getPrice()));
        holder.description.setText(myProducts.get(position).getDescription());

        // Reference to an image file in Cloud Storage
        StorageReference storageReference = FirebaseStorage.getInstance().getReference(myProducts.get(position).getImage());
        // Download directly from StorageReference using Glide
        // (See MyAppGlideModule for Loader registration)

        GlideApp.with(context /* context */)
                .load(storageReference)
                .into(holder.image);
    }

    // Return the size of your dataset (invoked by the layout manager)
    @Override
    public int getItemCount() {
        return myProducts.size();
    }


// Provide a reference to the views for each data item
// Complex data items may need more than one view per item, and
// you provide 